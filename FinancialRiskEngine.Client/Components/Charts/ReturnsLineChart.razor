@using FinancialRiskEngine.Engine.Classes.Financial
@inject IJSRuntime _jsInterop

<div class="col-12">
    <svg id="returns-plot"></svg>
</div>

@code {
    [Parameter]
    public List<Price> Prices { get; set; } = new List<Price>();

    private List<Price> _lastPrices = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _jsInterop.InvokeVoidAsync("CreatePricesChart", Prices, "#returns-plot");
            _lastPrices = Prices.ToList();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        // Compare prices list by reference or value
        bool pricesChanged = !_lastPrices.SequenceEqual(Prices);

        if (pricesChanged)
        {
            await _jsInterop.InvokeVoidAsync("CreatePricesChart", Prices, "#returns-plot");
            _lastPrices = Prices.ToList();
        }
    }
}
